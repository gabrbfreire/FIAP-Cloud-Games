name: CD Pipeline - Single Container

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: sa-east-1
      ECR_REPOSITORY: fcg-app

    steps:
      - name: Checkout do código
        uses: actions/checkout@v2

      - name: Configurar AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login no Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build da imagem Docker
        run: |
          docker build -t fcg-app .

      - name: Tag da imagem com ECR
        run: |
          docker tag fcg-app:latest ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${GITHUB_RUN_NUMBER}

      - name: Push da imagem para ECR
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${GITHUB_RUN_NUMBER}

      - name: Criar Dockerrun.aws.json (v1)
        run: |
          echo '{
            "AWSEBDockerrunVersion": 1,
            "Image": {
              "Name": "${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${GITHUB_RUN_NUMBER}",
              "Update": "true"
            },
            "Ports": [
              {
                "ContainerPort": 80
              }
            ]
          }' > Dockerrun.aws.json

      - name: Criar pacote de deploy
        run: zip -r deploy.zip Dockerrun.aws.json

      - name: Upload do pacote para S3
        run: |
          aws s3 cp deploy.zip s3://fcg-deployments/deploy-${GITHUB_RUN_NUMBER}.zip

      - name: Criar nova versão no Elastic Beanstalk
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name FiapCloudGames \
            --version-label fcg-${GITHUB_RUN_NUMBER} \
            --source-bundle S3Bucket=fcg-deployments,S3Key=deploy-${GITHUB_RUN_NUMBER}.zip

      - name: Atualizar ambiente no Elastic Beanstalk
        run: |
          aws elasticbeanstalk update-environment \
            --environment-nam
