name: CI/CD - Fiap Cloud Games

on:
  push:
    branches: [ "main" ]

env:
  REGISTRY_NAME: fcgregistrygabriel
  IMAGE_NAME: fiapcloudgames
  RESOURCE_GROUP: fiapcloudgames-rg
  CONTAINERAPP_NAME: fiapcloudgames-api
  ENVIRONMENT: fiapcloudgames-env
  SUBSCRIPTION_ID: "6b608dde-ef80-41c4-aba5-61c99963a92a"  # ‚úÖ Subscription correta

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v3

      - name: Login no Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Definir subscription padr√£o
        run: |
          az account set --subscription ${{ env.SUBSCRIPTION_ID }}
          echo "‚úÖ Subscription definida: ${{ env.SUBSCRIPTION_ID }}"

      - name: Verificar recursos
        run: |
          echo "üîç Verificando ACR..."
          az acr show --name ${{ env.REGISTRY_NAME }} --query "{Name:name, ResourceGroup:resourceGroup, Location:location}" --output table
          
          echo "üîç Verificando Resource Group..."
          az group show --name ${{ env.RESOURCE_GROUP }} --query "{Name:name, Location:location}" --output table

      - name: Login no ACR com admin credentials
        run: |
          echo "üîê Obtendo credenciais do ACR..."
          ACR_USERNAME=$(az acr credential show --name ${{ env.REGISTRY_NAME }} --query "username" -o tsv)
          ACR_PASSWORD=$(az acr credential show --name ${{ env.REGISTRY_NAME }} --query "passwords[0].value" -o tsv)
          
          echo "üê≥ Fazendo login no Docker Registry..."
          echo $ACR_PASSWORD | docker login ${{ env.REGISTRY_NAME }}.azurecr.io --username $ACR_USERNAME --password-stdin
          echo "‚úÖ Login no ACR realizado com sucesso!"

      - name: Build da imagem Docker
        run: |
          echo "üèóÔ∏è Building Docker image..."
          docker build \
            -t ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest \
            -t ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }} \
            -f src/FiapCloudGames.API/Dockerfile .
          echo "‚úÖ Build da imagem conclu√≠do!"

      - name: Push da imagem para o ACR
        run: |
          echo "üì§ Enviando imagem para o ACR..."
          docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
          echo "‚úÖ Imagem enviada com sucesso!"

      - name: Deploy no Azure Container Apps
        run: |
          echo "üöÄ Realizando deploy no Container Apps..."
          az containerapp update \
            --name ${{ env.CONTAINERAPP_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --image ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
          echo "‚úÖ Deploy conclu√≠do!"

      - name: Obter URL p√∫blico do Container App
        run: |
          URL=$(az containerapp show \
            -n ${{ env.CONTAINERAPP_NAME }} \
            -g ${{ env.RESOURCE_GROUP }} \
            --query properties.configuration.ingress.fqdn \
            -o tsv)
          echo "üåê Application URL: https://$URL"
          echo "üì¶ Image Version: ${{ github.sha }}"
