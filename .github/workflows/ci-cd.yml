name: CI/CD - Fiap Cloud Games

on:
  push:
    branches: [ "main" ]

env:
  REGISTRY_NAME: fcgregistrygabriel
  IMAGE_NAME: fiapcloudgames
  RESOURCE_GROUP: fiapcloudgames-rg
  CONTAINERAPP_NAME: fiapcloudgames-api
  ENVIRONMENT: fiapcloudgames-env

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v3

      - name: Login no Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login no ACR
        run: az acr login --name ${{ env.REGISTRY_NAME }}

      - name: Build da imagem Docker
        run: |
          docker build \
            -t ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest \
            -t ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }} \
            -f src/FiapCloudGames.API/Dockerfile .

      - name: Push da imagem para o ACR
        run: |
          docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Deploy no Azure Container Apps com Database
        run: |
          az containerapp update \
            --name ${{ env.CONTAINERAPP_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --image ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }} \
            --set-env-vars "ConnectionStrings__DefaultConnection=${{ secrets.CONNECTION_STRING }}"

      - name: Aguardar aplica√ß√£o inicializar
        run: sleep 30

      - name: Testar aplica√ß√£o
        run: |
          URL=$(az containerapp show -n ${{ env.CONTAINERAPP_NAME }} -g ${{ env.RESOURCE_GROUP }} --query properties.configuration.ingress.fqdn -o tsv)
          echo "üåê Application URL: https://$URL"
          
          # Testar se a aplica√ß√£o responde
          curl -f --retry 3 --retry-delay 10 https://$URL/ || echo "‚ö†Ô∏è Aplica√ß√£o ainda inicializando"
          curl -f https://$URL/health 2>/dev/null && echo "‚úÖ Health check passou" || echo "‚ö†Ô∏è Health check n√£o dispon√≠vel"

      - name: Verificar logs da aplica√ß√£o
        run: |
          echo "üìã √öltimos logs da aplica√ß√£o:"
          az containerapp logs show -n ${{ env.CONTAINERAPP_NAME }} -g ${{ env.RESOURCE_GROUP }} --tail 10
