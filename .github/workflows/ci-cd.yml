name: CI/CD - Fiap Cloud Games

on:
  push:
    branches: [ "main" ]

env:
  REGISTRY_NAME: fcgregistrygabriel
  IMAGE_NAME: fiapcloudgames
  RESOURCE_GROUP: fiapcloudgames-rg
  CONTAINERAPP_NAME: fiapcloudgames-api
  ENVIRONMENT: fiapcloudgames-env

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v3

      - name: Login no Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: VERIFICAR SUBSCRIPTION ATUAL
        run: |
          echo "üîç SUBSCRIPTION ATUAL:"
          az account show --query "{Name:name, Id:id}" -o table

      - name: TENTAR MUDAR PARA SUBSCRIPTION CORRETA
        run: |
          echo "üîÑ TENTANDO Mudar para subscription: 6b608dde-ef80-41c4-aba5-61c99963a92a"
          az account set --subscription 6b608dde-ef80-41c4-aba5-61c99963a92a || echo "‚ùå N√£o conseguiu mudar subscription"

      - name: VERIFICAR NOVA SUBSCRIPTION
        run: |
          echo "üîç NOVA SUBSCRIPTION:"
          az account show --query "{Name:name, Id:id}" -o table

      - name: VERIFICAR SE ACR EXISTE
        run: |
          echo "üîç Procurando ACR..."
          az acr list --query "[].{Name:name, ResourceGroup:resourceGroup, Subscription:id}" -o table

      - name: LOGIN NO ACR USANDO ADMIN - M√âTODO DIRETO
        run: |
          echo "üîê M√âTODO DIRETO: Obtendo credenciais do ACR..."
          
          # Tentar obter as credenciais do ACR diretamente
          ACR_USERNAME=$(az acr credential show --name ${{ env.REGISTRY_NAME }} --query "username" -o tsv 2>/dev/null || echo "fcgregistrygabriel")
          ACR_PASSWORD=$(az acr credential show --name ${{ env.REGISTRY_NAME }} --query "passwords[0].value" -o tsv 2>/dev/null || echo "")
          
          if [ -z "$ACR_PASSWORD" ]; then
            echo "‚ùå N√£o conseguiu obter senha via Azure CLI"
            echo "üîë Usando senha manual..."
            # Voc√™ precisa adicionar esta senha como secret no GitHub!
            ACR_PASSWORD="${{ secrets.ACR_PASSWORD }}"
          fi
          
          echo "üê≥ Fazendo login no Docker Registry..."
          echo $ACR_PASSWORD | docker login ${{ env.REGISTRY_NAME }}.azurecr.io --username $ACR_USERNAME --password-stdin
          echo "‚úÖ Login no ACR realizado!"

      - name: Build da imagem Docker
        run: |
          echo "üèóÔ∏è Building Docker image..."
          docker build \
            -t ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest \
            -f src/FiapCloudGames.API/Dockerfile .
          echo "‚úÖ Build conclu√≠do!"

      - name: Push da imagem para o ACR
        run: |
          echo "üì§ Enviando imagem para o ACR..."
          docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest
          echo "‚úÖ Push conclu√≠do!"

      - name: Deploy no Azure Container Apps
        run: |
          echo "üöÄ Fazendo deploy..."
          az containerapp update \
            --name ${{ env.CONTAINERAPP_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --image ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest
          echo "‚úÖ Deploy conclu√≠do!"

      - name: Obter URL p√∫blico
        run: |
          URL=$(az containerapp show -n ${{ env.CONTAINERAPP_NAME }} -g ${{ env.RESOURCE_GROUP }} --query properties.configuration.ingress.fqdn -o tsv)
          echo "üåê URL DA APLICA√á√ÉO: https://$URL"
