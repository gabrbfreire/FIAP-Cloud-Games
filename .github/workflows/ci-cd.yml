name: CI/CD - Fiap Cloud Games

on:
  push:
    branches: [ "main" ]

env:
  REGISTRY_NAME: fcgregistrygabriel
  IMAGE_NAME: fiapcloudgames
  RESOURCE_GROUP: fiapcloudgames-rg
  CONTAINERAPP_NAME: fiapcloudgames-api
  ENVIRONMENT: fiapcloudgames-env

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v3

      - name: Login no Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Descobrir subscriptions dispon√≠veis
        run: |
          echo "üîç Listando subscriptions dispon√≠veis..."
          az account list --query "[].{Name:name, Id:id, IsDefault:isDefault}" -o table
          
          echo "üîç Subscription atual:"
          az account show --query "{Name:name, Id:id}" -o table

      - name: Procurar o ACR em todas as subscriptions
        run: |
          echo "üîé Procurando ACR em todas as subscriptions..."
          az acr list --query "[].{Name:name, ResourceGroup:resourceGroup, Location:location, Subscription:id}" -o table

      - name: Procurar o Resource Group em todas as subscriptions
        run: |
          echo "üîé Procurando Resource Group em todas as subscriptions..."
          SUBSCRIPTIONS=$(az account list --query "[].id" -o tsv)
          
          for sub in $SUBSCRIPTIONS; do
            echo "Verificando subscription: $sub"
            az account set --subscription $sub
            if az group show --name ${{ env.RESOURCE_GROUP }} &> /dev/null; then
              echo "‚úÖ Resource Group encontrado na subscription: $sub"
              echo "SUBSCRIPTION_ID=$sub" >> $GITHUB_ENV
              break
            fi
          done

      - name: Login no ACR com admin credentials
        run: |
          echo "üîê Obtendo credenciais do ACR..."
          ACR_USERNAME=$(az acr credential show --name ${{ env.REGISTRY_NAME }} --query "username" -o tsv)
          ACR_PASSWORD=$(az acr credential show --name ${{ env.REGISTRY_NAME }} --query "passwords[0].value" -o tsv)
          
          echo "üê≥ Fazendo login no Docker Registry..."
          echo $ACR_PASSWORD | docker login ${{ env.REGISTRY_NAME }}.azurecr.io --username $ACR_USERNAME --password-stdin

      - name: Build e push da imagem Docker
        run: |
          docker build \
            -t ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }} \
            -f src/FiapCloudGames.API/Dockerfile .
          
          docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Deploy no Azure Container Apps
        run: |
          az containerapp update \
            --name ${{ env.CONTAINERAPP_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --image ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Obter URL p√∫blico do Container App
        run: |
          URL=$(az containerapp show -n ${{ env.CONTAINERAPP_NAME }} -g ${{ env.RESOURCE_GROUP }} --query properties.configuration.ingress.fqdn -o tsv)
          echo "üåê Application URL: https://$URL"
